[{"summary":"<p>The term „Home Automation“ means to most people being able to switch lights and to control shutters with a smartphone. Many commercial offerings indeed do not provide much more than this.\r\n<p><\/p>\r\nThe Open Source project openHAB (open Home Automation Bus) takes you much further than that: While running on small and cheap embedded devices like the Raspberry Pi, you can explore the world of Home Automation beyond the ordinary: Do a presence simulation by the push of a button; see live charts of your sensor data or adjust your irrigation schedule through Google calendar.\r\n<p><\/p>\r\nopenHAB is meant for Java and OSGi geeks: It comes with a powerful, Xbase-based scripting language, which allows to easily define every kind of automation logic you could possibly have in mind. Through its modular OSGi architecture it is furthermore very easily extendible, so that it can connect to a multitude of different systems.\r\n<p><\/p>\r\nThis session introduces the core concepts behind openHAB and demonstrates its advanced features in a live environment.<\/p>","topic":"Home Automation using OpenHAB","startsAt":null,"onDay":"5.15.2013","roomName":null,"speakers":"Thomas Eichstädt-Engelen","inRoom":null},{"summary":"<p>The majority of Twitter runs on open source technology, from the back-end to the front-end. The context of the talk will revolve around what happens behind the scenes when you send a Tweet and will trace the life of a Tweet from our backend to the eventual frontend. In the end, I expect the audience to leave with a better appreciation of open source technology and what happens behind the scenes when a humble Tweet appears in their timeline.<\/p>","topic":"The Life of a Tweet","startsAt":null,"onDay":"5.15.2013","roomName":null,"speakers":"Chris Aniszczyk","inRoom":null},{"summary":"<p>The Java driver for MongoDB is the most... mature... of the NoSQL database’s drivers. It was designed without some of the modern Java features we now take for granted (generics, I’m looking at you), and is the sort of API that will be much easier with the eagerly anticipated lambdas in Java 8.\r\n<\/p><p>\r\nAlthough figures are hard to come by, the existing Java driver might even be the most used of all of all the MongoDB drivers.  Which leads to a tricky question: how do you create a new API that utilises modern development patterns whilst retaining backwards compatibility for your users?  These users are fundamental to the success of your business, and you do not want to upset them, alienate them, break their systems or make it hard for them to migrate to the New World Order.\r\n<\/p><p>\r\nIn this presentation Trisha will share some of the pains experienced, and some of the solutions tried along the journey.  You might even get a sneak peak of the new MongoDB Java driver before it’s due for release.<\/p>","topic":"What do you mean, backwards compatibility?","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Trisha Gee","inRoom":null},{"summary":"<p>What pictures do we have in our minds when we think about effective software development? Code quality, continuous integration, pair programming or what have you. While I’m a big fan of all of them I would challenge the concept that this is the only, or the most important, area which developers should focus on.\r\n<\/p>\r\n<p> \r\nBuilding software is a collective effort of people working in different roles and this should always be a starting point to a discussion about effectiveness. The missing piece may be software craftsmanship but it may also be handful of dull chores that few would fancy doing. How can we tell? What should we use as guidance? And, at the end of the day, how to build software effectively?\r\n<\/p> <p>\r\nIt all starts with understanding how the work is done. Usually visualization is a good start. Then we can focus on effective flow of work. Work in progress limits are very helpful here. And then the fun starts. The process constrained in such a way starts showing inefficiencies while encouraging the team to deal with them. Will that always be about craftsmanship? I doubt that.\r\n<\/p> <p>\r\nThe session will show how to use elements of Kanban to improve effectiveness of teams building software while encouraging developers to look at a big picture.\r\n<\/p>","topic":"Effective Teams","startsAt":null,"onDay":"5.15.2013","roomName":null,"speakers":"Paweł Brodziński","inRoom":null},{"summary":"<p>The talk, split into two sections and drawing from a real implementation covers potential NoSQL architectures and the features they offer in the quest to reach the Holy Grail AKA linear scalability. First we examine an existing traditional replicated cache running at full capacity and how replacement with a distributed solution allowed the application to scale dramatically with a performance improvement to boot. Secondly we look at one of the pitfalls of distributed caching and how, using an essential tool from the Data Grid functionality armory, namely grid-execution we can provide massive scale out and low latencies. Both parts describe a real-world implementation delivered for a global on-line travel agency using Infinispan. Level: All levels, the talk is aimed at developers, architects and middleware specialists interested in caching solutions. Focus: Use-cases including technical detail.<\/p>","topic":"www.NoSQL.com","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Mark Addy","inRoom":null},{"summary":"<p>In-memory Data Grids (IMDGs) and NoSQL data stores are very alike conceptually. Many utilise a Key/Value store programming model and architecturally they are engineered with the same principals distributed horizontal scalability; high availability; performance and reliability. So the questions is when to use one over the other? This session will look at many of the common use cases seen in large scale web systems today and explore whether the problem to solve is a Big Data problem or a Fast Data problem. We'll look at capabilities of the two technologies and decide whether the best technology for each use case is NoSQL or an IMDG.<\/p>","topic":"Big Data or Fast Data?","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Steve Millidge","inRoom":null},{"summary":"<p>The theory of agile is well known. What doesn't get talked about enough is the nuts and bolts of the process. For developers. I come from a development background, and sympathise with those who bring a healthy dose of cynicism to any 'process', 'transformation' or 'process improvement'. I'll draw on 15 years experience working in development and coaching to illustrate some of the practical ways developers can improve their own processes without feeling like they've swallowed an agile textbook.<\/p>","topic":"Practical agile for developers","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"John Cieslik-Bridgen","inRoom":null},{"summary":"","topic":"Machine learning for a busy developer","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Leonid Igolnik","inRoom":null},{"summary":"<p>Modern computationally intensive tasks are rarely bottlenecked on the absolute performance of your processor cores, the real bottleneck in 2012 is getting data out of memory. CPU Caches are designed to alleviate the difference in performance between CPU Core Clockspeed and main memory clockspeed, but developers rarely understand how this interaction works or how to measure or tune their application accordingly. This Talk aims to solve that by: <br/>1. Describing how the CPU caches work in the latest Intel Hardware.<br/> 2. Showing people what and how to measure in order to understand the caching behaviour of their software. <br/>3. Giving examples of how this affects Java Program performance and what can be done to address things. <br/>4. Talking about what future versions of Java may do to help.<\/p>","topic":"Caching In","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Richard Warburton","inRoom":null},{"summary":"<p>From the wiki: \"Eating your own dog food, also called dogfooding, is a\r\nslang term used to reference a scenario in which a company (usually, a\r\ncomputer software company) uses its own product to demonstrate the\r\nquality and capabilities of the product.\"<\/p>\r\n<p>Gradle aspires to be the best project automation tool. It would be fun\r\nto look at how the Gradle team eats its own dog food. We'll start from\r\ndelicious automation of developer's everyday tasks and move on to\r\ncontinuous delivery goodies like change promotion, build pipeline and\r\none-click release. Delivered by Szczepan Faber, core dev at Gradle and\r\nhelpless test automation addict who gave you Mockito. See you at the talk!<\/p>","topic":"Automation dogfooding","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Szczepan Faber","inRoom":null},{"summary":"<p>SOAP sucks, it's the root of all evil… Whether we like it or not, however, a lot of endpoints still exists - live and kicking! There is a plethora of Java frameworks supporting SOAP but most of them follow the paradigm of the explicit or implicit code (stubs) generation. Handy as it may seem at the beginning, it can also be redundant and cumbersome. After the 8 long years of having Web-Services on the JVM almost nothing has changed in the way how we use them… Why do we still blindly follow the same (anti)patterns? This session will be a critical whirlwind tour of SOAP Web-Services reviewing the existing solutions and emphasizing some of the biggest drawbacks of the frameworks based on the code generation. It will rethink the idea of Java Web-Services refuting widely-accepted concepts that nobody reflects on anymore. It will also offer people handy tools to overcome common problems (like endpoint versioning) and prevent them from following bad practices. On the example of soap-ws, project authored by me, a completly different approach will be presented. soap-ws provides a lightweight Java Web-Services stack (based on Spring-WS) that handles the SOAP protocol \"codelessly\" on a purely XML level, adding a bit of Groovy flavor on the top of it! Using soap-ws enables handy generation, transmission and handling of SOAP messages without the usage of stubs, no matter what style the WS client and server are. Do you want to consume and expose a fully-functional SOAP service in 10 minutes in runtime? Do you want to learn how to properly unit test SOAP endpoints? Or maybe you simply want to have some fun? Don't miss this talk mate! <\/p>","topic":"SOAP sucks, doesn't it?","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Tom Bujok","inRoom":null},{"summary":"<p>If applications grow bigger, modularity becomes a key aspect regarding maintainability. Design decisions made in the early days are hardly discoverable in the codebase, inter-module dependencies grow a lot. The talk introduces means and approaches to connect logical architecture to the codebase. Beyond that we discuss patterns and best practices around general code organization, package structures to build a solid foundation for Java applications and in how far Spring can help creating loosely coupled components and dedicated points to extend applications.<\/p>","topic":"Whoops! Where did my architecture go?","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Oliver Gierke","inRoom":null},{"summary":"<p>The Garbage First Garbage Collector is touted as beng the collector of the future. Though it's suppose to more self tuning than any previous collector it still requires that you provide it with a number of parameters. Each of these parameters is used to affect different aspects of collector function and internal memory pool sizing. This session will cover how the internal memory pools are structured and how the collector functions. The session will also cover G1 GC logs and how to use that information to understand how to configure the G1.<\/p>","topic":"G1 Tuning","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Kirk Pepperdine","inRoom":null},{"summary":"<p>NoSQL is popular, NoSQL is cool. But how does this benefit the application developer? Or more important, how can an application developer live with NoSQL with minimal impact? In this talk, I first give you an overview of NoSQL, history and background, as well as the state of the art at the moment. I then look at what middleware should be doing with regards to storage systems in general, and the various open source middleware offerings available to make NoSQL more viable for the application developer. I then take you through a tour of various JBoss-related NoSQL middleware, and end up with a series of live use cases and real world problems solved by some of these tools.<\/p>","topic":"NoSQL for the application developer","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Manik Surtani","inRoom":null},{"summary":"<p>Domain-specific languages (DSLs) are good for both productivity\r\n        and program performance. However, developing a DSL and related\r\n        tools requires tremendous amounts of work. On the other hand,\r\n        embedded DSLs alleviate the pain of DSL construction by reusing\r\n        the machinery of the host language. Embedding comes with the\r\n        price as complete program information is usually lost, yielding\r\n        programs that typically have low performance<\/p>\r\n\r\n\r\n<p>In this talk\r\n        we will explain the Scala mix-in composition, abstract data\r\n        types, implicit conversions and macros. Then we will show how\r\n        these Scala features allow easy development of embedded DSLs\r\n        which preserve complete program knowledge. This allows\r\n        aggressive optimizations that lead to high program performance.\r\n        We will conclude with performance results of DSLs developed by\r\n        the described techniques.<\/p>","topic":"High-performance DSLs Embedded in Scala","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Vojin Jovanovic","inRoom":null},{"summary":"<p>With Kick-Ass Software Development you actually get stuff done. Feedback cycles are short, code quality is awesome and customers get the features they lust after. Less mangers managing, less testers testing and less IT-operators operating. The developers take the power back, making them much happier. Sound like paradise? It is!<\/p>\r\n<p>This session will show you how we do Kick-Ass Software Development at Atlassian. I will talk about how we: use pull requests for better code quality; collaborate fast to develop ideas; avoid meetings to get more stuff done; tighten our feedback loops to fail faster; shorten our release cycles; and work together happily on different continents. It's a great way to develop software and we think it can work in your company, too.<\/p>","topic":" How To Do Kick-Ass Software Development","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Sven Peters","inRoom":null},{"summary":"<p>The Raspberry Pi is a $25, credit-card sized computer that plugs in to a TV and keyboard. It includes an ARM chip that is powerful enough to run a full version of Java SE including JavaFX. You will get a chance to see Java and JavaFX technology running on a very accessible embedded platform. With a full Java Virtual Machine at your disposal, the possibilities are endless! <\/p>\r\n<p>In this session we will discuss tips and tricks on how to get up and running with Java and JavaFX on the Rasberry Pi. Everyone can join and we are eager to hear all about your cool projects and experiences.<\/p>","topic":"Raspberry Pi NightHacking","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Stephen Chin","inRoom":null},{"summary":"<p>I am quite excited how elegantly we can solve IO-bound problems like DB access with this new set of tools Scala and functional programming provides. I've recently built a simple Cassandra client using actors, type classes and monads while migrating one of our systems at Zeebox from Amazon S3 to Cassandra. It is simple and elegant (I believe :)) and it shows the real power of the language. So no more Java-like code written in Scala - It is functional but simple and powerful. Until recently, I was scared myself whenever I've heard the phrase \"type class\" let alone monad or theory of categories. I realised that all it is, is just that mathematicians tend to overcomplicate things hiding it behind theorems and proofs. Real life examples of monoids, monads or type classes can be quite simple and understandable for everybody.<\/p>","topic":"Typeclasses, Monads - Functional and simple!","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Piotr Gabryanczyk","inRoom":null},{"summary":"<p>You're a great Java developer. Can you use this skill to conquer JavaScript or Haskell or Ruby? There are truths about Java that don't export, but other principles are universal. This session explores both: what are the limitations of object-oriented design, and what is our potential? See examples of design principles applied for good and for evil. If Java is your strongest weapon but not the only sword you wield, this session will sharpen your strategy. The makings of a great polyglot developer are within you: come find them.<\/p>\r\n","topic":"Object-Oriented Design In the Wild","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Jessica Kerr","inRoom":null},{"summary":"<p>In this talk I would like to present few recently discovered security vulnerabilities in the Apache Struts 2 web framework and based on that try to increase developers' awareness of the overall application security. In my opinion, nowadays developers don’t care about the security too much, they depend on what the framework gives them. Quite often, then even don’t check security bulletins to see if a new vulnerability wasn’t discovered recently in his/her famous framework. I would like show few web attacks and explain how it was possible to harm an application or even entire server, how to prevent such kind of attacks in the future and so on. Examples will base on the Apache Struts 2, but almost all the same problems were pointed out in the Spring MVC or in the Apache Wicket. Each framework has its own weaknesses :-)<\/p>","topic":"How secure your web framework is?","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Łukasz Lenart","inRoom":null},{"summary":"<p>There are many implementations of JavaScript, meant to run either on the JVM or standalone as native code. Both approaches have their respective pros and cons. The soon-to-be open sourced Oracle Nashorn JavaScript project is based on the former approach. This presentation goes through the performance work that has gone on in Oracle's Nashorn JavaScript project to date in order to make JavaScript-to-bytecode generation for execution on the JVM feasible. Aside from covering the Nashorn project itself, we show that the new invokedynamic bytecode gets us part of the way there but may not quite be enough. Nashorn is also the first JavaScript runtime in the world to achieve 100% EcmaScript compliance. What other tricks did the Nashorn project use? The presentation also discusses future directions for increased performance for dynamic languages on the JVM, covering proposed enhancements to both the JVM itself and to the bytecode compiler.<\/p>","topic":"Nashorn: Implementing Dynamic Languages on the JVM","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Marcus Lagergren","inRoom":null},{"summary":"<p>There is a lot more to JDK 8 then Lambdas. In this fast paced run through the JDK Enhancement Proposals funded for JDK 8, we'll take a look at the whole lot. This talk will be run in an Ignite format -- 55 slides, 1 minute each, describing 55 more new\r\nthings planned for JDK 8.<\/p>","topic":"55 New Things In JDK 8","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Dalibor Topic","inRoom":null},{"summary":"<p>With the explosion of mobile devices and the Internet becoming\r\nubiquitous, there is a growing demand on building mobile applications\r\nthat have access to a Java EE backend. The session gives a overview on\r\nhow to build different mobile apps (hybrid, native and mobile web),\r\nthat use the JBoss AeroGear library to access private and\r\ncloud-enabled Java EE applications. The library has rich API support\r\nfor accessing RESTful services, data storage and security features\r\nbuild specifically for mobile, like OTP (One-Time-Password). The\r\nsession ends with an outlook to future developments of the AeroGear\r\nproject!<\/p>","topic":"Mobile Clients for JavaEE","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Matthias Weßendorf","inRoom":null},{"summary":"<!-- Java Service and Network Evolution -->\r\n<p>The evolution of communications is accelerating from simple voice calls to radically connecting anything at any time in any place. After the adoption of cell phones into the phone industry, the pace from feature phones, smart phones, pads, to Machine-to-Machine (M2M) devices, is growing at an exponential rate. The network infrastructure has evolved at the same rate – from simple in-band signaling, to Intelligent Networks, Advanced Intelligent Networks, 2G/3G,IMS and LTE. As devices and networks evolve, the network service platform has also evolved to support consumer demand, complex business solutions, and rise in multi-media services. From the early Service Control Points and Service Nodes to IMS Application Servers, Service Delivery Platforms must accommodate the next generation of services driven by Java for applications in WebRTC, M2M, E2E, and Cloud computing.<\/p>\r\n\r\n<p>Be sure to check out <a href=\"http://2013.geecon.org/openapihackaton\">the Open API Hackaton<\/a>.<\/>","topic":"Building mobile apps using network assets","startsAt":null,"onDay":"5.15.2013","roomName":null,"speakers":"Douglas Tait","inRoom":null},{"summary":"<p>Which IDE do you use? Eclipse? NetBeans? IntelliJ IDEA? Visual Studio? Vim? Yeah, Vim counts as an IDE too if you can configure it to behave like one! Do you leverage the full power of your favourite IDE/editor? Generally, developers _just use_ the IDE and every so often do not utilize the power of automated refactorings, shortcuts, fast navigation and other awesome features that IDEs provide. Modern IDEs have revolutionized the way in which we are able to work with the code. Using the IDE is a skill and this skill can be turned into a habit. The habit can be good or bad and we will discuss the common patterns in how developers use the IDE. In this session we will take a look at the features of various IDEs that you cannot live without. We'll start with navigation features, proceed with quick edit tips & tricks, and lead to cross-functional features of the IDEs by leveraging the power of plugin system. We will cover the brightest features and some useful plugins of the major Java IDEs: Eclipse, NetBeans and IntelliJ IDEA. It is my hope that you walk out from the session with an idea in mind, \"I'm going to give it a try!\".<\/p>","topic":"Do you really get your IDE?","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Anton Arhipov","inRoom":null},{"summary":"<p>JavaFX is now also available on ARM architecture which opens a completely new field for developers. Due to the reduced capabilities of the ARM architecture compared to standard desktop PC's one have to code in a slightly different way on this kind of machines. Based on the experience developing a JavaFX application for a BeagleBoard xM this session will give you an overview on the possibilities and quirks I came across. But even if the app is based on a developer preview version of JDK 1.7 for ARM it shows repectable results.<\/p>","topic":"\"Who let the dogs out...\" JavaFX on Embedded","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Gerrit Grunwald","inRoom":null},{"summary":"<p>Data is the fuel enterprises run on and the data access requirements of today's Java applications have grown to include JSON REST services for HTML5 and mobile clients, NoSQL database persistence, and multi-tenancy. Most developers use an assortment of independent frameworks to cope with each of these disparate requirements often having to copy and transform data from one format into another as it makes its way from database to browser and back again. Or they have to craft custom extensions to frameworks to provide features they were never designed to support. Meanwhile EclipseLink, best known as an open source provider of JPA for database access on the backend and JAXB for web services on the front end, has evolved to simplify the entire path from front to back. EclipseLink has added JSON binding to support HTML5 clients, zero code JAX-RS REST service support, NoSQL database persistence, and has integrated JPA with JAXB to make it easy to move data from database to XML or JSON and back again without data loss. In this session we'll dive into EclipseLink's new services and build an application that goes from browser to database leveraging EclipseLink both in the back end for data persistence and on the front end for JSON over REST to HTML5 and JavaScript clients.<\/p>","topic":"Java Persistence From NoSQL to HTML5 (and Back)","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Shaun Smith","inRoom":null},{"summary":"<p>Your background is in OOP languages and you have become intrigued by Clojure. You know that things are different, and that continuing to design your programs in the same way you did in the past is likely going to cause problems. In this session, we will take a look at concepts that are likely to be familiar to you, such as encapsulation, type and class hierarchies, modularization, and domain modeling, and show what the analogies in idiomatic Clojure are. We will also take a look at some of the additional tools Clojure offers that go way beyond what you are used to — hopefully setting you off on your way to become a great Clojure programmer.<\/p>","topic":"Unlearning OOP: How to Design Clojure Programs","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Stefan Tilkov","inRoom":null},{"summary":"Even without any sort of programming framework with lots of abstraction layers and fancy tooling, the Web platform is one of the most powerful environments for distributed and collaborative systems. If, that is, we actually /use/ it instead of continuously /abusing/ it through trying to turn it into something it's not. In this session, we'll challenge many commonly-held assumptions about how to best develop web applications. Even though we'll briefly touch the REST architectural style, most of the time will be spent discussing the strengths and ideal roles for HTML, CSS, JavaScript and their connection to the Web's core standards, HTTP and URIs. We'll see how a focus on simplicity and moderate use of technologies can lead to great applications that integrate well, scale well, are fun to develop, and are maintainable in the long run.","topic":"Web Development: You're Doing it Wrong","startsAt":null,"onDay":"5.16.2013","roomName":null,"speakers":"Stefan Tilkov","inRoom":null},{"summary":"<p>\"Why does this change cost 100 mandays? I want to add just one checkbox on the screen?\" \"But what technical debt we have to pay off? So far everything works fine!\" We all probably well know this type of sentences. To make matters worse, there are new symptoms: developers run away from the organization mumbling something about a \"big ball of mud\" - strange, they all got a pass to the gym... During the presentation I will present several \"special hacks\" in Domain Driven modeling. Some of them may be obvious (though usually unaware) and others less so. Some may be a significant change, other may be a minor detail - the detail that makes the difference. At the beginning we will use the model as a communication tool in order to: - indicate the complexity of the domain - understand the cost of the change - incur a technical debt on purpose - better understanding of the business by client himself Then we face common problems most models has: - excessive generalization - no distinction of generalization and abstraction techniques - modeling dozens of special cases instead of finding the deep rules - lack of the model for the essential complexity The main part is dedicated to a specific modeling techniques that will be useful at different levels: process, human communication, architectural and implementation.<\/P","topic":"Model is all you need","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Sławomir Sobótka","inRoom":null},{"summary":"<p>Over the past couple of years we have been building large scale Java applications and deployed them in the cloud. While dealing with typical cloud issues such as auto scaling, failover, and incremental deployments we meanwhile had to refactor them for significant functional changes.<\/p>\r\n<p>Being able to deal with change and dynamics are important reasons for companies to resort to the cloud for application development. Short time to market and rapidly changing requirements can lead to experimental software design however. Dealing with constant change in a codebase is non-trivial. In order to facilitate much change a modular codebase is of great importance. <\/p>\r\n<p>In this talk we will show you what we have learned on how to create modular Java applications and how to deploy them in the cloud using an Open Source approach without locking into one of the PaaS providers. We will discuss OSGi, scalable web application architecture, and Apache ACE for deployment and provisioning.<\/p>","topic":"Building Modular Cloud Applications in Java - Lessons Learned\r\n","startsAt":null,"onDay":"5.16.2013","roomName":null,"speakers":"Paul Bakker","inRoom":null},{"summary":"<p>Whilst Java is a feature rich, there are still areas where it looks enviously at other languages. Native languages like C boast the ability to specify arrays of structures which has the benefit of being able to have compact representation of data and allow for the fast conversion of data into a stream of bytes (ie. serialization). It's possible to achieve the same things in Java by carrying out direct memory management yourself through the use of the Unsafe class, but as the name suggests this can be perilous. This session will introduce the concept of bringing C like structures to Java through a proposed Java Language change, and show the improvements possible for the memory footprint and performance of applications.<\/p>","topic":"Compact Off-Heap Structures in the Java Language","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Steve Poole","inRoom":null},{"summary":"<p>Per-tenant resource management can help ensure that collocated tenants peacefully share computational resources based on individual quotas. This session begins with a comparison of deployment models (shared: hardware, OS, middleware, everything) to motivate the multitenant approach. The main topic is an exploration of experimental data isolation and resource management primitives in IBM’s JDK that combine to help make multitenant applications smaller and more predictable. Highlights include: A fine-grained tenant API; Per-tenant resource quotas based on the JSR 284 API; Tenant-aware JRE: run existing apps in a shared JVM without code changes; Challenges: handling misbehaved tenants, safe finalization, monitoring.<\/p>","topic":"JVM Support for Multitenant Applications","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Steve Poole","inRoom":null},{"summary":"<p>This session highlights how Java Embedded can play a role in the Internet of Things and Distributed Sensor Web as well as related technologies like Smart Home or Automotive. We demonstrate how existing Java standards like JSR 256 (Mobile Sensor API) can be modernized and improved towards a new generation of Java Embedded and Mobile. Taking technologies like the IEEE 1451 \"Smart Sensor\" standard into consideration, as well as OGC standards like SensorML or The Unified Code for Units of Measurement (UCUM) allowing type and context safe data transfer using various formats and protocols, whether it is XML, JSON or specific M2M protocols like MQTT as well as new JSRs like 360 (CLDC 8) and 361 (Java ME Embedded)<\/p>","topic":"Standards for the Future of Java Embedded","startsAt":null,"onDay":"5.16.2013","roomName":null,"speakers":"Werner Keil","inRoom":null},{"summary":"<p>Over the past couple of years we have been building large scale Java applications and deployed them in the cloud. While dealing with typical cloud issues such as auto scaling, failover, and incremental deployments we meanwhile had to refactor them for significant functional changes.<\/p>\r\n<p>\r\nBeing able to deal with change and dynamics are important reasons for companies to resort to the cloud for application development. Short time to market and rapidly changing requirements can lead to experimental software design however. Dealing with constant change in a codebase is non-trivial. In order to facilitate much change a modular codebase is of great importance. <\/p>\r\n<p>\r\nIn this talk we will show you what we have learned on how to create modular Java applications and how to deploy them in the cloud using an Open Source approach without locking into one of the PaaS providers. We will discuss OSGi, scalable web application architecture, and Apache ACE for deployment and provisioning.<\/p>","topic":"Building Modular Cloud Applications in Java - Lessons Learned","startsAt":null,"onDay":"5.16.2013","roomName":null,"speakers":"Bert Ertman","inRoom":null},{"summary":"Even Platform as a Service promise to host your application without a change, things are not so simple and you can't send your old EJB 1.0 application to the Cloud without some refactoring. During this session, I'll explain some architecture patterns to apply to your new developments so that your transition to the cloud is as smooth as possible.","topic":"Cloud patterns","startsAt":null,"onDay":"5.16.2013","roomName":null,"speakers":"Nicolas De Loof","inRoom":null},{"summary":"Fast feedback from monitoring is a key of Continuous Delivery. JMX is the right Java API to do so but it unfortunately stayed underused and underappreciated as it was difficult to connect to monitoring and graphing systems. Throw in the sin bin the poor solutions based on log files and weakly secured web interfaces! A new generation of Open Source tooling makes it easy to graph java application metrics and integrate them to traditional monitoring systems like Nagios. Following the logic of DevOps, we will look together how best to integrate the monitoring dimension in a project: from design to development, to QA and finally to production on both traditional deployment and in the Cloud. Come and discover how the JmxTrans-Graphite ticket can make your life easier.","topic":"Open Source Monitoring for Java with Graphite","startsAt":null,"onDay":"5.16.2013","roomName":null,"speakers":"Cyrille Le Clerc","inRoom":null},{"summary":"Working with legacy code is tough. No tests, no documentation, fear of breaking unknown parts of the code and difficult to understand what it is going on. The only way to deal with that is to test and refactor merciless. For the majority of us, legacy code is part of our life and learning how to embrace it can make things far more enjoyable. In this live coding session, Sandro will be demonstrating how to overcome the most common problems found when testing legacy code. He will be taking a piece of messy Java code, test it until is 100% covered and then show how to refactor it in order to bring the business language and requirements to life. Although the code is in Java, the same principles can be applied to any language.","topic":"Testing and Refactoring Legacy Code","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Sandro Mancuso","inRoom":null},{"summary":"We have lots of information available about our systems. CPU, disk IO, orders placed, error rates, users logged in. But typically all these pieces of information are collected, aggregated and stored in very different ways making correlation difficult and increasing the operational overhead of our systems. What if we could treat all of this information as events? What if we could aggregate, store, and report on all of this information as a uniform event stream?\r\n\r\nThis talk will look at emerging trends in the space of log aggregation, monitoring and event streaming to paint a picture for how you too can start to make real use of the information already available to you using nothing more complex than some free, off the shelf Open Source software.","topic":"Surfing The Event Stream","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Sam Newman","inRoom":null},{"summary":"<p>Entrepreneurs spend millions of dollars and waste time building products people don't want. Companies also get stuck in \"analysis paralysis\" or falling in love with bad ideas. Even with the best of intentions and conditions, preventable failures like these have been going on since the dawn of time. What if there was a better way to create a new product and avoid this nightmare? What can we learn from patterns of great entrepreneurs and inventors? \r\n<\/p>\r\n<p>Copeland will introduce the concept of \"pretotyping.\" The idea is to test the initial appeal and actual usage of a potential new product by simulating its core experience with the smallest possible investment of time and money. Less formally, pretotyping is a way to build confidence in a product idea quickly and inexpensively by creating extremely simplified versions that validate the premise: \"If we build it, they will use it.\"  The main objective of pretotyping is to answer questions about the product's appeal and usage: \"Would people be interested in it?\", \"Would they buy it if we build it?\", \"Will they use it as expected?\", \"Will they continue to use it?\"<\/p>\r\n\r\n<p>This talk describes how you can implement these ideas right now. Copeland will use examples from his experience at Google and will talk about how core beliefs, culture, organization, and infrastructure can be used to successfully encourage and enable innovation. This talk will help you whether you are an innovator in a big company or \"two engineers in a garage\". Find your path to innovation and set out to change your world—one step at a time. <\/p>","topic":"Pretotyping","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Patrick Copeland","inRoom":null},{"summary":"HBase is the Hadoop Database, adding sometimes sorely missed random updates allowing to build applications on top of Hadoop that can modify and serve data in real-time. These types of application complement the batch oriented nature of Hadoop, and facilitate new kinds of data processing. The implicit sorting feature of HBase lends itself to serialize otherwise unordered events, for example in the context of sessionization. This talk will introduce the attendee into the basic concepts behind HBase and its programming API. Using real-world examples it shows how to apply the feature set of HBase to an application design, while possibly replacing the need to use a traditional RDBMS.","topic":"HBase - An Introduction","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Lars George","inRoom":null},{"summary":"This presentation is for the more skilled HBase practitioner (or those that attended the earlier introductory talk) seeking to understand the inner workings of HBase, and how to make efficient use of its idiosyncrasies. The talk discusses common pitfalls in designing data schemas for applications running atop of HBase. It addresses the initially confusing shortcomings of its API, and explains advanced concepts to overcome the lack of transactions and other concepts known to exist in traditional databases. The presentation concludes with useful advice on how to plan for proper HBase cluster sizing, based on experience gained from many real-world installations.","topic":"HBase - Advanced Concepts","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Lars George","inRoom":null},{"summary":"<p>Today, application developers devote roughly 80% of their code to persisting roughly 20% of the total data flowing through the applications. That means two things: * 80% of the data flowing through our applications is at best lost in rolling log files, at worst never collected -- without ever being analyzed or accounted for. * Application-level database programming, licensing, storage, administration, and ETL processing have maxed out IT budgets and have constrained app development teams from keeping pace with the rate of change in the business. The other 80% of the data is \"Event Data\" that can no longer be ignored if you want to stay competitive. Changes to application state are already stored as a sequence of events in application and middleware logs. In fact, since this data never held value to anyone but the developer in the past, a lot of potentially valuable information is often never collected. With Hadoop, we can: * store and query these events - Transaction tracing, * use the event log to reconstruct the application domain at any point in time - ETL, * use the same event log to construct new domains we haven't planned for - ELT, and * automatically adjust our data domains to cope with retroactive changes - ??? In this talk, we will demonstrate how capturing all event data could dramatically simplify data collection and management within the enterprise.<\/p>","topic":"Go Beyond \"Debug\": Wire Tap your App for Knowledge","startsAt":null,"onDay":"5.16.2013","roomName":null,"speakers":"Oleg Zhurakousky","inRoom":null},{"summary":"<p>Managing a modern multi-component application in a continuous integration/deployment environment can be very tricky. In this session we will concentrate on two of the aspects - environment setup, showcasing tools like Vagrant, Chef and Puppet for creating and controlling development, testing, staging, production and other environments and pushing the deliverables through those environments, using tools like Gradle, Jenkins and Artifactory. Join us and get all the little tips and tricks that will help you rule your development world.<\/p>","topic":"Developing for multi-component environment","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Baruch Sadogursky","inRoom":null},{"summary":"<p>The term „Home Automation“ means to most people being able to switch lights and to control shutters with a smartphone. Many commercial offerings indeed do not provide much more than this.\r\n<p><\/p>\r\nThe Open Source project openHAB (open Home Automation Bus) takes you much further than that: While running on small and cheap embedded devices like the Raspberry Pi, you can explore the world of Home Automation beyond the ordinary: Do a presence simulation by the push of a button; see live charts of your sensor data or adjust your irrigation schedule through Google calendar.\r\n<p><\/p>\r\nopenHAB is meant for Java and OSGi geeks: It comes with a powerful, Xbase-based scripting language, which allows to easily define every kind of automation logic you could possibly have in mind. Through its modular OSGi architecture it is furthermore very easily extendible, so that it can connect to a multitude of different systems.\r\n<p><\/p>\r\nThis session introduces the core concepts behind openHAB and demonstrates its advanced features in a live environment.<\/p>","topic":"Home Automation using OpenHAB","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Kai Kreuzer","inRoom":null},{"summary":"<p>Jenkins is the most adopted open source continuous integration server today, and beyond the automated build and test, it is a platform for launching all kinds of automation tasks. As the use of Jenkins grows inside an organization, people are automating complex activities that need to be choreographed, such as deploying an application, running a load test, cleaning up the environment, and then handing over the build to the operation team. Such orchestration of activities is a very useful building block for continuous delivery, a practice promoted in recent years. This session looks at various patterns and plug-ins that deal with this kind of choreography.<\/p>","topic":"Large Scale Automation with Jenkins","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Kohsuke Kawaguchi","inRoom":null},{"summary":"\"Functional Programming\" is the modern received wisdom regarding program and\r\nlanguage design.  All the cool kids talk about writing code that is \"functional\"\r\nor even \"purely functional\".  However, functional programming as it is traditionally\r\ndefined really doesn't cut the mustard, and if you look at how modern functional\r\narchitectures are being shaped, everyone seems to have tacitly arrived at the\r\nsame conclusion: more is needed.  In this talk, we will look at how modern\r\nfunctional languages like Scala, Clojure and even Haskell have evolved beyond\r\nthe simple paradigms of the lambda calculus.  We will see how the industry\r\nhas really moved beyond functional programming and into the realm of something\r\nmore powerful, more expressive and better suited to the task of large application\r\narchitecture.","topic":"Living in a Post-Functional World","startsAt":null,"onDay":"5.16.2013","roomName":null,"speakers":"Daniel Spiewak","inRoom":null},{"summary":"The Cake Pattern is often explained as a way of doing dependency injection in\r\nScala in a statically typed framework.  This is analogous to describing FP as a\r\nway of manipulating List-like data structures.  The pattern is capable of so much more.\r\nThis talk will explore the Cake Pattern, from the very basics to its deepest\r\nrecesses.  We will look at the theoretical foundations of this pattern in type\r\ntheory, the numerous and flaming pitfalls it imposes, as well as some best\r\npractices and day-to-day useful tips.","topic":"The Bakery from the Black Lagoon","startsAt":null,"onDay":"5.15.2013","roomName":null,"speakers":"Daniel Spiewak","inRoom":null},{"summary":"Class loaders are at the core of the Java language. Java EE containers, OSGi, NetBeans modules, Tapestry 5, Grails and many others use class loaders heavily. Yet when something goes wrong, would you know how to solve it? In this session we'll take a tour of the Java class loading mechanism, both from JVM and developer point of view. We will look at typical problems that you get with class loading and how to solve them. ClassNoDefError, IncompatibleClassChangeError, LinkageError and many others are symptoms of specific things going wrong that you can usually find and fix. For each problem we'll go through a hands on demo with a corresponding solution.","topic":"Do you really get class loaders?","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Simon Maple","inRoom":null},{"summary":"Have you ever heard about Aggregate Roots, Entities, Commands, Events, Event Stores, Sagas, Domain-Driven Design, Command Query Responsibility Segregation, or Event Sourcing? If so, then you probably heard that we don't like frameworks in that world. We like to focus on the actual problems - the Domain. Nevertheless, when we write our systems, we still need some boilerplate code to handle the infrastructure. In Java, the <a href=\"http://www.axonframework.org/\">Axon Framework<\/a> comes to the rescue. Come, and see some examples how to use it, and how it helps concentrating on the Domain.","topic":"DDD/CQRS/ES in practice - Axon to the rescue","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Piotr Wyczesany","inRoom":null},{"summary":"","topic":"Keynote: The Cultural Anthropology of Stack Exchange","startsAt":null,"onDay":"5.15.2013","roomName":null,"speakers":"Joel Spolsky","inRoom":null},{"summary":"Accessing JSON objects from statically typed languages like Java is often tedious.\r\nIt’s easy to navigate a JSON object’s structure using String keys, but you’ll lose type safety and code completion. To get those conveniences back, you’ll have to laboriously define bindings between JSON and Java beans.\r\n\r\nWhat if we could keep code completion without defining bindings? In this talk I’ll show you how to use two new features of Scala 2.10, scala.Dynamic and macros, to implement a small library that accesses JSON data from a web service (e.g. Twitter API) and infers types using live data. These types allow Scala’s Eclipse plugin to provide code completion. A similar approach is  taken by Javascript IDE’s that inspect live objects to provide code completion.\r\n\r\nWe’ll wrap this up with a live demo of using that library to access Twitter’s feed, relying on code completion when accessing the JSON returned by the Twitter API.","topic":"Type safe JSON using Scala Macros","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Grzegorz Kossakowski","inRoom":null},{"summary":"<p>Different programming paradigms serve different purposes. Systems programmers prefer tools that are dumb, imperative and close to the metal. Enterprise programmers prefer tools which foster complexity, increasing billable hours and the client's dependency on the developer.\r\n<\/p><p>\r\nAnd, let me just come clean and admit it, functional programmers do it for that delicious feeling of superiority that comes from looking down your nose at the normals in their caves banging together for loops and mutable state to make fire.\r\n<\/p><p>\r\nTreat yourself to a crash course in the vocabulary of functional programming: higher order functions, combinators, the infinite opportunities to throw the word \"monad\" in the face of anyone who thinks an ironic moustache is enough to justify all that self-assured smugness these days. You'll never have to lose a programming argument again once you've learned where to casually toss terms like \"applicative functor\" and \"Kleisli triple\" into the conversation.\r\n<\/p><p>\r\nThis is the War of the Hipsters. Arm yourself now, before it goes mainstream.<\/p>","topic":"What Every Hipster Should Know About Functional Programming","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Bodil Stokke","inRoom":null},{"summary":"In this talk we will discuss general database refactoring patterns, database multi-tenancy models as well as techniques that are used to apply 100s of changes to live databases with 0 downtime for the application.\r\n","topic":"Patterns of SaaS: refactoring databases, or how to apply 650,000 changes in a few hours without losing any sleep","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Leonid Igolnik, Marcin Burliński","inRoom":null},{"summary":"With support for asynchronous mechanisms such as epoll on Linux, the JVM is a compelling platform for networking applications, striking a good balance between ease of programming and performance. This talk will cover detailed approaches for achieving high throughput and low latency when performing network I/O on the JVM. Treatment will be given to different frameworks for JVM languages including Java (Netty), Scala (Akka) and Clojure (Aleph), synchronous vs. asynchronous I/O and when to use which, as well as other techniques for optimizing throughput and lowering latency. Specific topics will be drawn from practical application building large scale, high throughput messaging systems dealing with millions of mobile devices every second.","topic":"High Performance Network Programming on the JVM","startsAt":null,"onDay":"5.16.2013","roomName":null,"speakers":"Erik Onnen","inRoom":null},{"summary":"Lots of people are talking about Micro Services. But how micro is micro? And while we're at it, what is a micro service anyway?\r\n\r\nThis session will briefly introduce the concept of microservices, and why they are important. But then we'll focus on the tough questions. If you're starting with a big, monolithic system, how should you split it up? When are microservices right for you? This talk looks at the competing forces from Conways law to Operations, which can help you make the right decisions about service granularity and just how 'micro' you should go.","topic":"From Macro to Micro: How Big Should Your Services Be?","startsAt":null,"onDay":"5.16.2013","roomName":null,"speakers":"Sam Newman","inRoom":null},{"summary":"Extreme Programming had some momentum as a practiced agile method in the beginning of last decade. But then SCRUM took over the lead and soft, PM-oriented practices started dominating the agile software development movement and thinking. Focusing purely on the PM side without strong  technical background and practices has made a good few teams fail their projects and get back to the old-school waterfallish methods. In the presentation I'll be talking about implementing technical practices of XP in your teams and projects. How to start using them, what to watch out for and how to make them stick. I'll be talking about implementing TDD, Pair-Programming, Collective Code Ownership and Continuous Integration and Continuous Delivery - which should constitute a tooling of any contemporary agile team.","topic":"Extreme Programming practices for your team","startsAt":null,"onDay":"5.16.2013","roomName":null,"speakers":"Paweł Lipiński","inRoom":null},{"summary":"Hadoop is entering a new era where more and more clients are now looking not only for a platform to store a lot of data, but also for the platform that can continue to accept a lot of data at the very high rates. While it seems like a simple case, the complexity as always is in the details. For example; Once the ingest begins it should never stop. How would it affect the MapRedice and Query. Parallel ingest. Complex Event Processing (CEP) and more. The conventional means of ingesting and dealing with such data are starting to show its limitation thus requiring an alternatives. This talk will explore the area of real-time data ingest into Hadoop and present the architectural trade-offs as well as demonstrate alternative implementations that strike the appropriate balance across the following common challenges: \r\n<ul>\r\n<li>Decentralized writes (multiple data centers and collectors)<\/li>\r\n<li>Continuous Availability, High Reliability<\/li>\r\n<li>No loss of data<\/li>\r\n<li>Elasticity of introducing more writers<\/li>\r\n<li>Bursts in Speed per syslog emitter<\/li>\r\n<li>Continuous, real-time collection<\/li>\r\n<li>Flexible Write Targets (local FS, HDFS etc.)<\/li>\r\n<\/ul>","topic":"High Speed Continuous & Reliable Data Ingest into","startsAt":null,"onDay":"5.15.2013","roomName":null,"speakers":"Oleg Zhurakousky","inRoom":null},{"summary":"Spock is a groovy based testing framework that leverages all the \"best practices\" of the last several years taking advantage of many of the development experience of the industry.   So combine Junit,  BDD, RSpec, Groovy and Vulcans... and you get Spock!  This session assumes some understanding of testing and junit and builds on it.   We will introduce and dig deep into Spock as a test specification and mocking tool.","topic":"Making Java Unit Test Groovy with Spock","startsAt":null,"onDay":"5.16.2013","roomName":null,"speakers":"Ken Sipe","inRoom":null},{"summary":"In the words of John Gage, \"The network is the computer\".  At the heart of everything we do is a complex system of infrastructure from which we are often abstracted.<br/>\r\n\r\nThis session will start with the underlying understanding of networking at a low level.  At this level we will discuss, IP, MAC, ARP, DNS and DHCP.  As we walk up an abstraction level, we discuss sockets, NAT, gateways and firewalls along with the use of TCP and UDP.   Spending some time at this layer can make network developers more productive, as we look at tools which help us answer the question, \"who owns this port?\",  \"where is this packet going?\" and \"What is my latency and why?\".<br/>\r\n\r\nThe session will end with a little fun looking at wifi, where will we sniff, snort, crack:)  From a security stand point we will look at the challenges of wifi and how it has become the weakest component on the net.<br/>","topic":"Networking and Hacking","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Ken Sipe","inRoom":null},{"summary":"<p>ElasticSearch combines the power of Apache Lucene (NoSQL since 2001) and the movement of distributed, scalable high-performance NoSQL solutions into easy to use schema free search engine that can serve full-text search request, key-value lookups, schema free analytics requests, facets or even suggestions in real-time. This talk will give an introduction to the key features of ElasticSearch with live examples.<\/p>\r\n<p>The talk won’t be an exhaustive feature presentation but rather an overview of what and how ElasticSearch can do for you.<\/p>","topic":"With a hammer in your hand… ElasticSearch","startsAt":null,"onDay":"5.15.2013","roomName":null,"speakers":"Simon Willnauer","inRoom":null},{"summary":"<p>Java Message Service is a well-known standard for sending messages in the Java world. It's conceptually simple and easy to use. Every Java developer is familiar with it. Who has not used queues? Who?<\/p>\r\n\r\n<p>On the other hand we have the Ruby ecosystem. There is no real messaging solution for Ruby. Some try to craft their own, some reuse existing solutions. In <a href=\"http://torquebox.org/\">TorqueBox<\/a> we made a fusion of the JMS standard and the beauty of Ruby.<\/p>\r\n\r\n<p>TorqueBox is a Ruby Application Server based on the best Java application server out there: JBoss AS (really, we think it's true). TorqueBox makes it possible to run web (but not only!) Ruby applications allowing to use Java services which were available only to Java applications so far. As a bonus everything is exposed in a Ruby-like way (read: easy to use).<\/p>\r\n\r\n<p>In this session Marek will briefly introduce TorqueBox and refresh the knowledge about concepts behind JMS. After this he will show how to use the messaging features of TorqueBox; with code examples, commentary and many demos.<\/p>\r\n\r\n<p>Marek will also show how easy it is to schedule task execution with TorqueBox with cron (but not only!) expressions.<\/p>","topic":"Messaging and scheduled jobs made simple","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Marek Goldmann","inRoom":null},{"summary":"Quality of bank’s IT system is crucial for this institution. Any error in this system could have very serious financial or marketing consequences. On the other hand, systems for financial institutions are often big, complicated, contains a lot of dependencies and contains legacy parts. Increasing quality of such systems can be a real challenge.<br/><br/>\r\n\r\nPresentation shows some practical methods like creating useful documentation, code audits, automatic regression tests, introducing handover process, setting release policy, reducing technical debts... We will go through these activities for pointing out the most important elements of quality assurance.\r\n","topic":"Building quality in big IT systems - in practice","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Stanisław Matczak","inRoom":null},{"summary":"After years when there were EJBs and there was Test Driven Development, the two worlds finally met each other. Taking the latest EJB standard,it's embeddable container standard, Arquillian and classic testing techniques (starting from TDD, through GOOS and few others) we can build a complete enterprise solution guided by tests. In this live coding session I'll go through multiple EJB 3.1 features, building and deploying a complete enterprise application, fully covered with tests. From tiniest little bits of 'business logic' through data model, finishing with external API (web, REST and SOAP), each and every step covered with just enough tests to give confidence application is working as desired. Discussing each feature from both specification and testability perspective, will provide a comprehensive walkthrough an EJB architecture, features provided by specification as well as through testing the app itself as well as the application server boundary. So don't blame EJBs for your server not being testable.","topic":"Building an EJB application guided by tests","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Jakub Marchwicki","inRoom":null},{"summary":"<!-- Java Service and Network Evolution -->\r\n<p>The evolution of communications is accelerating from simple voice calls to radically connecting anything at any time in any place. After the adoption of cell phones into the phone industry, the pace from feature phones, smart phones, pads, to Machine-to-Machine (M2M) devices, is growing at an exponential rate. The network infrastructure has evolved at the same rate – from simple in-band signaling, to Intelligent Networks, Advanced Intelligent Networks, 2G/3G,IMS and LTE. As devices and networks evolve, the network service platform has also evolved to support consumer demand, complex business solutions, and rise in multi-media services. From the early Service Control Points and Service Nodes to IMS Application Servers, Service Delivery Platforms must accommodate the next generation of services driven by Java for applications in WebRTC, M2M, E2E, and Cloud computing.<\/p>\r\n\r\n<p>Be sure to check out <a href=\"http://2013.geecon.org/openapihackaton\">the Open API Hackaton<\/a>.<\/>","topic":"Building mobile apps using network assets","startsAt":null,"onDay":"5.15.2013","roomName":null,"speakers":"Marcin Nowak","inRoom":null},{"summary":"<p>cd antipatterns; ls -al<\/p>\r\n \r\n<p>Releasing and Risk start with an R for a reason. Continuous delivery is the buzzed killer for that.. or is it? We'd like to take you to a journey through well-practiced malpractice, discussing some of the most interesting hoops people made people jump through.<\/p>\r\n \r\n<p>While releasing and doing infrastructure in organisations big and small, ranging from (soon to be multi-million) startups to multi-million corporations, we’ve learned that good intentions, backed by poor execution and lack of thinking ahead, can lead to hell on earth. Growing platforms is tough enough by itself, let’s not make it harder with \r\ninsane release processes...<\/p>","topic":"Continuous delivery antipatterns","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Andrzej Grzesik, Marcin Sawicki","inRoom":null},{"summary":"<p>Have you ever thought about what you would be doing professionally in 3 years? 5 years? 10 years? 20 years? Will anyone be using Java then? Will your company or position even exist? Are you doing anything right now to prepare yourself for the future?<\/p>\r\n<p>Do you think one can become a senior developer in 2 years? Who are software astronauts? Why are your best engineers thrown into managerial pits to rot there?<\/p>\r\n<p>Wojtek started an avalanche by his keynote at Confitura 2012. His hard-line stance related to the recruitment of Java developers presented there polarized the community and social media like Twitter, YouTube, blogoshpere were hot with debates about it.<\/p>\r\n<p>This session is a quite relaxed continuation of this subject but this time focused more on softer aspects and the career planning of a Java developer. It bases on his very subjective observations and conclusions drawn from the analysis of hundreds of candidates and dozens of interviews carried out in several last months.<\/p>","topic":"Java Developer Career Unplugged","startsAt":null,"onDay":"5.14.2013","roomName":null,"speakers":"Wojtek Seliga","inRoom":null}]